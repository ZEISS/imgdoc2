# Simple workflow for deploying static content to GitHub Pages
name: Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # use doxygen to build the documentation for the C++ part
      - name: Doxygen action for libimgdoc2
        uses: mattnotmitt/doxygen-action@v1.9.5
        with:
          doxyfile-path: "./Doxyfile" # Path to Doxyfile
          working-directory: "libimgdoc2" # Working directory
      - name: Doxygen action for imgdoc2API
        uses: mattnotmitt/doxygen-action@v1.9.5
        with:
          doxyfile-path: "./Doxyfile" # Path to Doxyfile
          working-directory: "imgdoc2API" # Working directory
      # ...and docfx to build the documentation for the .NET part
      # (main motivation for using docfx was that doxygen does not understand latest C# language features)
      - name: DocFx action for ImgDoc2Net
        run: |
          dotnet tool update -g docfx
          cd dotnet/docfx
          docfx
          # currently, we are building the documentation in-tree, and we are manually
          # deleting the files from the repo here
          rm docfx.json
          rm toc.yml
          rm index.md
      - name: Prepare doxygen-generated documentation for upload
        run: |
          mkdir ${{github.workspace}}/documentation
          mkdir ${{github.workspace}}/documentation/libimgdoc2
          mkdir ${{github.workspace}}/documentation/imgdoc2net
          mkdir ${{github.workspace}}/documentation/imgdoc2API
          cp -r ${{github.workspace}}/libimgdoc2/doxygen/html/* ${{github.workspace}}/documentation/libimgdoc2
          cp -r ${{github.workspace}}/imgdoc2API/doxygen/html/* ${{github.workspace}}/documentation/imgdoc2API
          cp -r ${{github.workspace}}/dotnet/docfx/* ${{github.workspace}}/documentation/imgdoc2net
          # add a "top-level-HTML-file" redirecting to the actual documentation
          echo "<meta http-equiv=\"Refresh\" content=\"0; url='imgdoc2net/'\" />" >> ${{github.workspace}}/documentation/index.html
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: "./documentation"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
