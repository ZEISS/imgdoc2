### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Implementation.TileInfoQueryClause
  commentId: T:ImgDoc2Net.Implementation.TileInfoQueryClause
  id: TileInfoQueryClause
  parent: ImgDoc2Net.Implementation
  children:
  - ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions
  - ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable
  langs:
  - csharp
  - vb
  name: TileInfoQueryClause
  nameWithType: TileInfoQueryClause
  fullName: ImgDoc2Net.Implementation.TileInfoQueryClause
  type: Class
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/TileInfoQueryClause.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: TileInfoQueryClause
    path: ../imgdoc2Net/Implementation/TileInfoQueryClause.cs
    startLine: 12
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Implementation of the ITileInfoQueryClause interface.
  example: []
  syntax:
    content: 'public class TileInfoQueryClause : ITileInfoQueryClause'
    content.vb: Public Class TileInfoQueryClause Implements ITileInfoQueryClause
  inheritance:
  - System.Object
  implements:
  - ImgDoc2Net.Interfaces.ITileInfoQueryClause
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable
  commentId: P:ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable
  id: PyramidLevelConditionsModifiable
  parent: ImgDoc2Net.Implementation.TileInfoQueryClause
  langs:
  - csharp
  - vb
  name: PyramidLevelConditionsModifiable
  nameWithType: TileInfoQueryClause.PyramidLevelConditionsModifiable
  fullName: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/TileInfoQueryClause.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: PyramidLevelConditionsModifiable
    path: ../imgdoc2Net/Implementation/TileInfoQueryClause.cs
    startLine: 17
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets the (mutable) pyramid level conditions list.
  example: []
  syntax:
    content: public List<QueryClause> PyramidLevelConditionsModifiable { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{ImgDoc2Net.Interfaces.QueryClause}
      description: The (mutable) pyramid level conditions list.
    content.vb: Public ReadOnly Property PyramidLevelConditionsModifiable As List(Of QueryClause)
  overload: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable*
- uid: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions
  commentId: P:ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions
  id: PyramidLevelConditions
  parent: ImgDoc2Net.Implementation.TileInfoQueryClause
  langs:
  - csharp
  - vb
  name: PyramidLevelConditions
  nameWithType: TileInfoQueryClause.PyramidLevelConditions
  fullName: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/TileInfoQueryClause.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: PyramidLevelConditions
    path: ../imgdoc2Net/Implementation/TileInfoQueryClause.cs
    startLine: 20
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets the query clauses for the pyramid level.
  example: []
  syntax:
    content: public IEnumerable<QueryClause> PyramidLevelConditions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{ImgDoc2Net.Interfaces.QueryClause}
      description: The pyramid level conditions.
    content.vb: Public ReadOnly Property PyramidLevelConditions As IEnumerable(Of QueryClause)
  overload: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions*
  implements:
  - ImgDoc2Net.Interfaces.ITileInfoQueryClause.PyramidLevelConditions
references:
- uid: ImgDoc2Net.Implementation
  commentId: N:ImgDoc2Net.Implementation
  name: ImgDoc2Net.Implementation
  nameWithType: ImgDoc2Net.Implementation
  fullName: ImgDoc2Net.Implementation
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ImgDoc2Net.Interfaces.ITileInfoQueryClause
  commentId: T:ImgDoc2Net.Interfaces.ITileInfoQueryClause
  parent: ImgDoc2Net.Interfaces
  name: ITileInfoQueryClause
  nameWithType: ITileInfoQueryClause
  fullName: ImgDoc2Net.Interfaces.ITileInfoQueryClause
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable*
  commentId: Overload:ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable
  name: PyramidLevelConditionsModifiable
  nameWithType: TileInfoQueryClause.PyramidLevelConditionsModifiable
  fullName: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditionsModifiable
- uid: System.Collections.Generic.List{ImgDoc2Net.Interfaces.QueryClause}
  commentId: T:System.Collections.Generic.List{ImgDoc2Net.Interfaces.QueryClause}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<QueryClause>
  nameWithType: List<QueryClause>
  fullName: System.Collections.Generic.List<ImgDoc2Net.Interfaces.QueryClause>
  nameWithType.vb: List(Of QueryClause)
  fullName.vb: System.Collections.Generic.List(Of ImgDoc2Net.Interfaces.QueryClause)
  name.vb: List(Of QueryClause)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: ImgDoc2Net.Interfaces.QueryClause
    name: QueryClause
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ImgDoc2Net.Interfaces.QueryClause
    name: QueryClause
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions*
  commentId: Overload:ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions
  name: PyramidLevelConditions
  nameWithType: TileInfoQueryClause.PyramidLevelConditions
  fullName: ImgDoc2Net.Implementation.TileInfoQueryClause.PyramidLevelConditions
- uid: ImgDoc2Net.Interfaces.ITileInfoQueryClause.PyramidLevelConditions
  commentId: P:ImgDoc2Net.Interfaces.ITileInfoQueryClause.PyramidLevelConditions
  parent: ImgDoc2Net.Interfaces.ITileInfoQueryClause
  name: PyramidLevelConditions
  nameWithType: ITileInfoQueryClause.PyramidLevelConditions
  fullName: ImgDoc2Net.Interfaces.ITileInfoQueryClause.PyramidLevelConditions
- uid: System.Collections.Generic.IEnumerable{ImgDoc2Net.Interfaces.QueryClause}
  commentId: T:System.Collections.Generic.IEnumerable{ImgDoc2Net.Interfaces.QueryClause}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<QueryClause>
  nameWithType: IEnumerable<QueryClause>
  fullName: System.Collections.Generic.IEnumerable<ImgDoc2Net.Interfaces.QueryClause>
  nameWithType.vb: IEnumerable(Of QueryClause)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ImgDoc2Net.Interfaces.QueryClause)
  name.vb: IEnumerable(Of QueryClause)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: ImgDoc2Net.Interfaces.QueryClause
    name: QueryClause
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ImgDoc2Net.Interfaces.QueryClause
    name: QueryClause
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
