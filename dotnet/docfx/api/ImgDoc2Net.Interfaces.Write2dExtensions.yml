### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Interfaces.Write2dExtensions
  commentId: T:ImgDoc2Net.Interfaces.Write2dExtensions
  id: Write2dExtensions
  parent: ImgDoc2Net.Interfaces
  children:
  - ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  langs:
  - csharp
  - vb
  name: Write2dExtensions
  nameWithType: Write2dExtensions
  fullName: ImgDoc2Net.Interfaces.Write2dExtensions
  type: Class
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/Write2dExtensions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Write2dExtensions
    path: ../imgdoc2Net/Interfaces/Write2dExtensions.cs
    startLine: 13
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: "\nIn this class we gather extensions methods (on the IWrite2d-interface). \n"
  example: []
  syntax:
    content: public static class Write2dExtensions
    content.vb: Public Module Write2dExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  commentId: M:ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  id: AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  isExtensionMethod: true
  parent: ImgDoc2Net.Interfaces.Write2dExtensions
  langs:
  - csharp
  - vb
  name: AddTile(IWrite2d, ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, byte[])
  nameWithType: Write2dExtensions.AddTile(IWrite2d, ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, byte[])
  fullName: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d, ImgDoc2Net.Interfaces.ITileCoordinate, in ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, byte[])
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/Write2dExtensions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddTile
    path: ../imgdoc2Net/Interfaces/Write2dExtensions.cs
    startLine: 15
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  syntax:
    content: public static long AddTile(this IWrite2d write2, ITileCoordinate tileCoordinate, in LogicalPosition logicalPosition, Tile2dBaseInfo tile2dBaseInfo, DataType dataType, byte[] data)
    parameters:
    - id: write2
      type: ImgDoc2Net.Interfaces.IWrite2d
    - id: tileCoordinate
      type: ImgDoc2Net.Interfaces.ITileCoordinate
    - id: logicalPosition
      type: ImgDoc2Net.Interfaces.LogicalPosition
    - id: tile2dBaseInfo
      type: ImgDoc2Net.Interfaces.Tile2dBaseInfo
    - id: dataType
      type: ImgDoc2Net.Interfaces.DataType
    - id: data
      type: System.Byte[]
    return:
      type: System.Int64
    content.vb: Public Shared Function AddTile(write2 As IWrite2d, tileCoordinate As ITileCoordinate, logicalPosition As LogicalPosition, tile2dBaseInfo As Tile2dBaseInfo, dataType As DataType, data As Byte()) As Long
  overload: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile*
  nameWithType.vb: Write2dExtensions.AddTile(IWrite2d, ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, Byte())
  fullName.vb: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d, ImgDoc2Net.Interfaces.ITileCoordinate, ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, Byte())
  name.vb: AddTile(IWrite2d, ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, Byte())
references:
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile*
  commentId: Overload:ImgDoc2Net.Interfaces.Write2dExtensions.AddTile
  name: AddTile
  nameWithType: Write2dExtensions.AddTile
  fullName: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile
- uid: ImgDoc2Net.Interfaces.IWrite2d
  commentId: T:ImgDoc2Net.Interfaces.IWrite2d
  parent: ImgDoc2Net.Interfaces
  name: IWrite2d
  nameWithType: IWrite2d
  fullName: ImgDoc2Net.Interfaces.IWrite2d
- uid: ImgDoc2Net.Interfaces.ITileCoordinate
  commentId: T:ImgDoc2Net.Interfaces.ITileCoordinate
  parent: ImgDoc2Net.Interfaces
  name: ITileCoordinate
  nameWithType: ITileCoordinate
  fullName: ImgDoc2Net.Interfaces.ITileCoordinate
- uid: ImgDoc2Net.Interfaces.LogicalPosition
  commentId: T:ImgDoc2Net.Interfaces.LogicalPosition
  parent: ImgDoc2Net.Interfaces
  name: LogicalPosition
  nameWithType: LogicalPosition
  fullName: ImgDoc2Net.Interfaces.LogicalPosition
- uid: ImgDoc2Net.Interfaces.Tile2dBaseInfo
  commentId: T:ImgDoc2Net.Interfaces.Tile2dBaseInfo
  parent: ImgDoc2Net.Interfaces
  name: Tile2dBaseInfo
  nameWithType: Tile2dBaseInfo
  fullName: ImgDoc2Net.Interfaces.Tile2dBaseInfo
- uid: ImgDoc2Net.Interfaces.DataType
  commentId: T:ImgDoc2Net.Interfaces.DataType
  parent: ImgDoc2Net.Interfaces
  name: DataType
  nameWithType: DataType
  fullName: ImgDoc2Net.Interfaces.DataType
- uid: System.Byte[]
  isExternal: true
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
