### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Interfaces.DimensionCondition
  commentId: T:ImgDoc2Net.Interfaces.DimensionCondition
  id: DimensionCondition
  parent: ImgDoc2Net.Interfaces
  children:
  - ImgDoc2Net.Interfaces.DimensionCondition.Dimension
  - ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd
  - ImgDoc2Net.Interfaces.DimensionCondition.RangeStart
  langs:
  - csharp
  - vb
  name: DimensionCondition
  nameWithType: DimensionCondition
  fullName: ImgDoc2Net.Interfaces.DimensionCondition
  type: Struct
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/DimensionCondition.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: DimensionCondition
    path: ../imgdoc2Net/Interfaces/DimensionCondition.cs
    startLine: 11
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: "\nStructure defining a range clause for a dimension.\n"
  example: []
  syntax:
    content: public struct DimensionCondition
    content.vb: Public Structure DimensionCondition
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: ImgDoc2Net.Interfaces.DimensionCondition.Dimension
  commentId: P:ImgDoc2Net.Interfaces.DimensionCondition.Dimension
  id: Dimension
  parent: ImgDoc2Net.Interfaces.DimensionCondition
  langs:
  - csharp
  - vb
  name: Dimension
  nameWithType: DimensionCondition.Dimension
  fullName: ImgDoc2Net.Interfaces.DimensionCondition.Dimension
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/DimensionCondition.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dimension
    path: ../imgdoc2Net/Interfaces/DimensionCondition.cs
    startLine: 16
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: Gets or sets the dimension.
  example: []
  syntax:
    content: public Dimension Dimension { get; set; }
    parameters: []
    return:
      type: ImgDoc2Net.Implementation.Dimension
      description: The dimension.
    content.vb: Public Property Dimension As Dimension
  overload: ImgDoc2Net.Interfaces.DimensionCondition.Dimension*
- uid: ImgDoc2Net.Interfaces.DimensionCondition.RangeStart
  commentId: P:ImgDoc2Net.Interfaces.DimensionCondition.RangeStart
  id: RangeStart
  parent: ImgDoc2Net.Interfaces.DimensionCondition
  langs:
  - csharp
  - vb
  name: RangeStart
  nameWithType: DimensionCondition.RangeStart
  fullName: ImgDoc2Net.Interfaces.DimensionCondition.RangeStart
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/DimensionCondition.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: RangeStart
    path: ../imgdoc2Net/Interfaces/DimensionCondition.cs
    startLine: 21
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: Gets or sets the start value of the range (inclusive).
  example: []
  syntax:
    content: public int RangeStart { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The start value of the range (inclusive).
    content.vb: Public Property RangeStart As Integer
  overload: ImgDoc2Net.Interfaces.DimensionCondition.RangeStart*
- uid: ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd
  commentId: P:ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd
  id: RangeEnd
  parent: ImgDoc2Net.Interfaces.DimensionCondition
  langs:
  - csharp
  - vb
  name: RangeEnd
  nameWithType: DimensionCondition.RangeEnd
  fullName: ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/DimensionCondition.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: RangeEnd
    path: ../imgdoc2Net/Interfaces/DimensionCondition.cs
    startLine: 26
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: Gets or sets the end value of the range (inclusive).
  example: []
  syntax:
    content: public int RangeEnd { get; set; }
    parameters: []
    return:
      type: System.Int32
      description: The end value of the range (inclusive).
    content.vb: Public Property RangeEnd As Integer
  overload: ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd*
references:
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces.DimensionCondition.Dimension*
  commentId: Overload:ImgDoc2Net.Interfaces.DimensionCondition.Dimension
  name: Dimension
  nameWithType: DimensionCondition.Dimension
  fullName: ImgDoc2Net.Interfaces.DimensionCondition.Dimension
- uid: ImgDoc2Net.Implementation.Dimension
  commentId: T:ImgDoc2Net.Implementation.Dimension
  parent: ImgDoc2Net.Implementation
  name: Dimension
  nameWithType: Dimension
  fullName: ImgDoc2Net.Implementation.Dimension
- uid: ImgDoc2Net.Implementation
  commentId: N:ImgDoc2Net.Implementation
  name: ImgDoc2Net.Implementation
  nameWithType: ImgDoc2Net.Implementation
  fullName: ImgDoc2Net.Implementation
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
- uid: ImgDoc2Net.Interfaces.DimensionCondition.RangeStart*
  commentId: Overload:ImgDoc2Net.Interfaces.DimensionCondition.RangeStart
  name: RangeStart
  nameWithType: DimensionCondition.RangeStart
  fullName: ImgDoc2Net.Interfaces.DimensionCondition.RangeStart
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd*
  commentId: Overload:ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd
  name: RangeEnd
  nameWithType: DimensionCondition.RangeEnd
  fullName: ImgDoc2Net.Interfaces.DimensionCondition.RangeEnd
