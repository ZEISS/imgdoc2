### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Implementation.CreateOptions
  commentId: T:ImgDoc2Net.Implementation.CreateOptions
  id: CreateOptions
  parent: ImgDoc2Net.Implementation
  children:
  - ImgDoc2Net.Implementation.CreateOptions.#ctor
  - ImgDoc2Net.Implementation.CreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  - ImgDoc2Net.Implementation.CreateOptions.AddDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  - ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  - ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  - ImgDoc2Net.Implementation.CreateOptions.Dispose
  - ImgDoc2Net.Implementation.CreateOptions.Dispose(System.Boolean)
  - ImgDoc2Net.Implementation.CreateOptions.Filename
  - ImgDoc2Net.Implementation.CreateOptions.Finalize
  - ImgDoc2Net.Implementation.CreateOptions.Handle
  - ImgDoc2Net.Implementation.CreateOptions.UseBlobTable
  - ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex
  langs:
  - csharp
  - vb
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: ImgDoc2Net.Implementation.CreateOptions
  type: Class
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: CreateOptions
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 99
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Implementation of the ICreateOptions interface.
  example: []
  syntax:
    content: 'public class CreateOptions : ICreateOptions, IDisposable'
    content.vb: Public Class CreateOptions Implements ICreateOptions, IDisposable
  inheritance:
  - System.Object
  implements:
  - ImgDoc2Net.Interfaces.ICreateOptions
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ImgDoc2Net.Implementation.CreateOptions.#ctor
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.#ctor
  id: '#ctor'
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: CreateOptions()
  nameWithType: CreateOptions.CreateOptions()
  fullName: ImgDoc2Net.Implementation.CreateOptions.CreateOptions()
  type: Constructor
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: .ctor
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 20
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: "\nInitializes a new instance of the <xref href=\"ImgDoc2Net.Implementation.CreateOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CreateOptions()
    content.vb: Public Sub New()
  overload: ImgDoc2Net.Implementation.CreateOptions.#ctor*
  nameWithType.vb: CreateOptions.New()
  fullName.vb: ImgDoc2Net.Implementation.CreateOptions.New()
  name.vb: New()
- uid: ImgDoc2Net.Implementation.CreateOptions.Handle
  commentId: P:ImgDoc2Net.Implementation.CreateOptions.Handle
  id: Handle
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: CreateOptions.Handle
  fullName: ImgDoc2Net.Implementation.CreateOptions.Handle
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Handle
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 28
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets the interop handle.
  remarks: 'This is intended for internal use. '
  example: []
  syntax:
    content: public IntPtr Handle { get; }
    parameters: []
    return:
      type: System.IntPtr
      description: The handle.
    content.vb: Public ReadOnly Property Handle As IntPtr
  overload: ImgDoc2Net.Implementation.CreateOptions.Handle*
- uid: ImgDoc2Net.Implementation.CreateOptions.Filename
  commentId: P:ImgDoc2Net.Implementation.CreateOptions.Filename
  id: Filename
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: CreateOptions.Filename
  fullName: ImgDoc2Net.Implementation.CreateOptions.Filename
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Filename
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 36
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets or sets the filename of the file.
  example: []
  syntax:
    content: public string Filename { get; set; }
    parameters: []
    return:
      type: System.String
      description: The filename.
    content.vb: Public Property Filename As String
  overload: ImgDoc2Net.Implementation.CreateOptions.Filename*
  implements:
  - ImgDoc2Net.Interfaces.ICreateOptions.Filename
- uid: ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex
  commentId: P:ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex
  id: UseSpatialIndex
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: UseSpatialIndex
  nameWithType: CreateOptions.UseSpatialIndex
  fullName: ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: UseSpatialIndex
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 46
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: >-
    Gets or sets a value indicating whether the database should be created containing a
       spatial index.
  example: []
  syntax:
    content: public bool UseSpatialIndex { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: True if to construct with a spatial index; false otherwise.
    content.vb: Public Property UseSpatialIndex As Boolean
  overload: ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex*
  implements:
  - ImgDoc2Net.Interfaces.ICreateOptions.UseSpatialIndex
- uid: ImgDoc2Net.Implementation.CreateOptions.UseBlobTable
  commentId: P:ImgDoc2Net.Implementation.CreateOptions.UseBlobTable
  id: UseBlobTable
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: UseBlobTable
  nameWithType: CreateOptions.UseBlobTable
  fullName: ImgDoc2Net.Implementation.CreateOptions.UseBlobTable
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: UseBlobTable
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 55
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets or sets a value indicating whether the database should be created containing a blob table.
  example: []
  syntax:
    content: public bool UseBlobTable { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: True if a blob table is to be created; false if not.
    content.vb: Public Property UseBlobTable As Boolean
  overload: ImgDoc2Net.Implementation.CreateOptions.UseBlobTable*
  implements:
  - ImgDoc2Net.Interfaces.ICreateOptions.UseBlobTable
- uid: ImgDoc2Net.Implementation.CreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  id: AddDimension(ImgDoc2Net.Implementation.Dimension)
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: AddDimension(Dimension)
  nameWithType: CreateOptions.AddDimension(Dimension)
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddDimension
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 62
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Adds a dimension.
  example: []
  syntax:
    content: public void AddDimension(Dimension dimension)
    parameters:
    - id: dimension
      type: ImgDoc2Net.Implementation.Dimension
      description: The dimension to be added.
    content.vb: Public Sub AddDimension(dimension As Dimension)
  overload: ImgDoc2Net.Implementation.CreateOptions.AddDimension*
  implements:
  - ImgDoc2Net.Interfaces.ICreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
- uid: ImgDoc2Net.Implementation.CreateOptions.AddDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.AddDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  id: AddDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: AddDimensions(IEnumerable<Dimension>)
  nameWithType: CreateOptions.AddDimensions(IEnumerable<Dimension>)
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddDimensions(System.Collections.Generic.IEnumerable<ImgDoc2Net.Implementation.Dimension>)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddDimensions
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 70
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Adds the enumeration of dimensions.
  example: []
  syntax:
    content: public void AddDimensions(IEnumerable<Dimension> dimensions)
    parameters:
    - id: dimensions
      type: System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension}
      description: The enumeration of dimensions.
    content.vb: Public Sub AddDimensions(dimensions As IEnumerable(Of Dimension))
  overload: ImgDoc2Net.Implementation.CreateOptions.AddDimensions*
  nameWithType.vb: CreateOptions.AddDimensions(IEnumerable(Of Dimension))
  fullName.vb: ImgDoc2Net.Implementation.CreateOptions.AddDimensions(System.Collections.Generic.IEnumerable(Of ImgDoc2Net.Implementation.Dimension))
  name.vb: AddDimensions(IEnumerable(Of Dimension))
- uid: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  id: AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: AddIndexedDimension(Dimension)
  nameWithType: CreateOptions.AddIndexedDimension(Dimension)
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddIndexedDimension
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 79
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Adds a dimension for which an index is to be created.
  example: []
  syntax:
    content: public void AddIndexedDimension(Dimension dimension)
    parameters:
    - id: dimension
      type: ImgDoc2Net.Implementation.Dimension
      description: The dimension to be added for which an index is to be created.
    content.vb: Public Sub AddIndexedDimension(dimension As Dimension)
  overload: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension*
  implements:
  - ImgDoc2Net.Interfaces.ICreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
- uid: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  id: AddIndexedDimensions(System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension})
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: AddIndexedDimensions(IEnumerable<Dimension>)
  nameWithType: CreateOptions.AddIndexedDimensions(IEnumerable<Dimension>)
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions(System.Collections.Generic.IEnumerable<ImgDoc2Net.Implementation.Dimension>)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddIndexedDimensions
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 87
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Adds the enumeration of dimensions for which an index is to be created.
  example: []
  syntax:
    content: public void AddIndexedDimensions(IEnumerable<Dimension> dimensions)
    parameters:
    - id: dimensions
      type: System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension}
      description: The enumeration of dimensions for which an index is to be created.
    content.vb: Public Sub AddIndexedDimensions(dimensions As IEnumerable(Of Dimension))
  overload: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions*
  nameWithType.vb: CreateOptions.AddIndexedDimensions(IEnumerable(Of Dimension))
  fullName.vb: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions(System.Collections.Generic.IEnumerable(Of ImgDoc2Net.Implementation.Dimension))
  name.vb: AddIndexedDimensions(IEnumerable(Of Dimension))
- uid: ImgDoc2Net.Implementation.CreateOptions.Finalize
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.Finalize
  id: Finalize
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: ~CreateOptions()
  nameWithType: CreateOptions.~CreateOptions()
  fullName: ImgDoc2Net.Implementation.CreateOptions.~CreateOptions()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Finalize
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 104
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: "\nFinalizes an instance of the <xref href=\"ImgDoc2Net.Implementation.CreateOptions\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: protected ~CreateOptions()
    content.vb: ''
  overload: ImgDoc2Net.Implementation.CreateOptions.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: ImgDoc2Net.Implementation.CreateOptions.Dispose
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.Dispose
  id: Dispose
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CreateOptions.Dispose()
  fullName: ImgDoc2Net.Implementation.CreateOptions.Dispose()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dispose
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 111
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: >-
    Performs application-defined tasks associated with freeing, releasing, or resetting
       unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: ImgDoc2Net.Implementation.CreateOptions.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: ImgDoc2Net.Implementation.CreateOptions.Dispose(System.Boolean)
  commentId: M:ImgDoc2Net.Implementation.CreateOptions.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: ImgDoc2Net.Implementation.CreateOptions
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: CreateOptions.Dispose(bool)
  fullName: ImgDoc2Net.Implementation.CreateOptions.Dispose(bool)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/CreateOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dispose
    path: ../imgdoc2Net/Implementation/CreateOptions.cs
    startLine: 122
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: >-
    Performs application-defined tasks associated with freeing, releasing, or resetting
       unmanaged resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        True to release both managed and unmanaged resources; false to
           release only unmanaged resources.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: ImgDoc2Net.Implementation.CreateOptions.Dispose*
  nameWithType.vb: CreateOptions.Dispose(Boolean)
  fullName.vb: ImgDoc2Net.Implementation.CreateOptions.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: ImgDoc2Net.Implementation
  commentId: N:ImgDoc2Net.Implementation
  name: ImgDoc2Net.Implementation
  nameWithType: ImgDoc2Net.Implementation
  fullName: ImgDoc2Net.Implementation
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ImgDoc2Net.Interfaces.ICreateOptions
  commentId: T:ImgDoc2Net.Interfaces.ICreateOptions
  parent: ImgDoc2Net.Interfaces
  name: ICreateOptions
  nameWithType: ICreateOptions
  fullName: ImgDoc2Net.Interfaces.ICreateOptions
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: ImgDoc2Net.Implementation.CreateOptions
  commentId: T:ImgDoc2Net.Implementation.CreateOptions
  parent: ImgDoc2Net.Implementation
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: ImgDoc2Net.Implementation.CreateOptions
- uid: ImgDoc2Net.Implementation.CreateOptions.#ctor*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.#ctor
  name: CreateOptions
  nameWithType: CreateOptions.CreateOptions
  fullName: ImgDoc2Net.Implementation.CreateOptions.CreateOptions
  nameWithType.vb: CreateOptions.New
  fullName.vb: ImgDoc2Net.Implementation.CreateOptions.New
  name.vb: New
- uid: ImgDoc2Net.Implementation.CreateOptions.Handle*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.Handle
  name: Handle
  nameWithType: CreateOptions.Handle
  fullName: ImgDoc2Net.Implementation.CreateOptions.Handle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: ImgDoc2Net.Implementation.CreateOptions.Filename*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.Filename
  name: Filename
  nameWithType: CreateOptions.Filename
  fullName: ImgDoc2Net.Implementation.CreateOptions.Filename
- uid: ImgDoc2Net.Interfaces.ICreateOptions.Filename
  commentId: P:ImgDoc2Net.Interfaces.ICreateOptions.Filename
  parent: ImgDoc2Net.Interfaces.ICreateOptions
  name: Filename
  nameWithType: ICreateOptions.Filename
  fullName: ImgDoc2Net.Interfaces.ICreateOptions.Filename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex
  name: UseSpatialIndex
  nameWithType: CreateOptions.UseSpatialIndex
  fullName: ImgDoc2Net.Implementation.CreateOptions.UseSpatialIndex
- uid: ImgDoc2Net.Interfaces.ICreateOptions.UseSpatialIndex
  commentId: P:ImgDoc2Net.Interfaces.ICreateOptions.UseSpatialIndex
  parent: ImgDoc2Net.Interfaces.ICreateOptions
  name: UseSpatialIndex
  nameWithType: ICreateOptions.UseSpatialIndex
  fullName: ImgDoc2Net.Interfaces.ICreateOptions.UseSpatialIndex
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ImgDoc2Net.Implementation.CreateOptions.UseBlobTable*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.UseBlobTable
  name: UseBlobTable
  nameWithType: CreateOptions.UseBlobTable
  fullName: ImgDoc2Net.Implementation.CreateOptions.UseBlobTable
- uid: ImgDoc2Net.Interfaces.ICreateOptions.UseBlobTable
  commentId: P:ImgDoc2Net.Interfaces.ICreateOptions.UseBlobTable
  parent: ImgDoc2Net.Interfaces.ICreateOptions
  name: UseBlobTable
  nameWithType: ICreateOptions.UseBlobTable
  fullName: ImgDoc2Net.Interfaces.ICreateOptions.UseBlobTable
- uid: ImgDoc2Net.Implementation.CreateOptions.AddDimension*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.AddDimension
  name: AddDimension
  nameWithType: CreateOptions.AddDimension
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddDimension
- uid: ImgDoc2Net.Interfaces.ICreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  commentId: M:ImgDoc2Net.Interfaces.ICreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  parent: ImgDoc2Net.Interfaces.ICreateOptions
  name: AddDimension(Dimension)
  nameWithType: ICreateOptions.AddDimension(Dimension)
  fullName: ImgDoc2Net.Interfaces.ICreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.ICreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
    name: AddDimension
  - name: (
  - uid: ImgDoc2Net.Implementation.Dimension
    name: Dimension
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.ICreateOptions.AddDimension(ImgDoc2Net.Implementation.Dimension)
    name: AddDimension
  - name: (
  - uid: ImgDoc2Net.Implementation.Dimension
    name: Dimension
  - name: )
- uid: ImgDoc2Net.Implementation.Dimension
  commentId: T:ImgDoc2Net.Implementation.Dimension
  parent: ImgDoc2Net.Implementation
  name: Dimension
  nameWithType: Dimension
  fullName: ImgDoc2Net.Implementation.Dimension
- uid: ImgDoc2Net.Implementation.CreateOptions.AddDimensions*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.AddDimensions
  name: AddDimensions
  nameWithType: CreateOptions.AddDimensions
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddDimensions
- uid: System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension}
  commentId: T:System.Collections.Generic.IEnumerable{ImgDoc2Net.Implementation.Dimension}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Dimension>
  nameWithType: IEnumerable<Dimension>
  fullName: System.Collections.Generic.IEnumerable<ImgDoc2Net.Implementation.Dimension>
  nameWithType.vb: IEnumerable(Of Dimension)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ImgDoc2Net.Implementation.Dimension)
  name.vb: IEnumerable(Of Dimension)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: ImgDoc2Net.Implementation.Dimension
    name: Dimension
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ImgDoc2Net.Implementation.Dimension
    name: Dimension
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension
  name: AddIndexedDimension
  nameWithType: CreateOptions.AddIndexedDimension
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimension
- uid: ImgDoc2Net.Interfaces.ICreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  commentId: M:ImgDoc2Net.Interfaces.ICreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  parent: ImgDoc2Net.Interfaces.ICreateOptions
  name: AddIndexedDimension(Dimension)
  nameWithType: ICreateOptions.AddIndexedDimension(Dimension)
  fullName: ImgDoc2Net.Interfaces.ICreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.ICreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
    name: AddIndexedDimension
  - name: (
  - uid: ImgDoc2Net.Implementation.Dimension
    name: Dimension
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.ICreateOptions.AddIndexedDimension(ImgDoc2Net.Implementation.Dimension)
    name: AddIndexedDimension
  - name: (
  - uid: ImgDoc2Net.Implementation.Dimension
    name: Dimension
  - name: )
- uid: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions
  name: AddIndexedDimensions
  nameWithType: CreateOptions.AddIndexedDimensions
  fullName: ImgDoc2Net.Implementation.CreateOptions.AddIndexedDimensions
- uid: ImgDoc2Net.Implementation.CreateOptions.Finalize*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.Finalize
  name: ~CreateOptions
  nameWithType: CreateOptions.~CreateOptions
  fullName: ImgDoc2Net.Implementation.CreateOptions.~CreateOptions
  spec.csharp:
  - name: "~"
  - uid: ImgDoc2Net.Implementation.CreateOptions.Finalize*
    name: CreateOptions
- uid: ImgDoc2Net.Implementation.CreateOptions.Dispose*
  commentId: Overload:ImgDoc2Net.Implementation.CreateOptions.Dispose
  name: Dispose
  nameWithType: CreateOptions.Dispose
  fullName: ImgDoc2Net.Implementation.CreateOptions.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
