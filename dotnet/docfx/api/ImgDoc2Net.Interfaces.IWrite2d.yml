### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Interfaces.IWrite2d
  commentId: T:ImgDoc2Net.Interfaces.IWrite2d
  id: IWrite2d
  parent: ImgDoc2Net.Interfaces
  children:
  - ImgDoc2Net.Interfaces.IWrite2d.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.IntPtr,System.Int64)
  langs:
  - csharp
  - vb
  name: IWrite2d
  nameWithType: IWrite2d
  fullName: ImgDoc2Net.Interfaces.IWrite2d
  type: Interface
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/IWrite2d.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: IWrite2d
    path: ../imgdoc2Net/Interfaces/IWrite2d.cs
    startLine: 11
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: "\nThis interface is used to give write-access to the document. \n"
  example: []
  syntax:
    content: 'public interface IWrite2d : IDisposable'
    content.vb: Public Interface IWrite2d Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - ImgDoc2Net.Interfaces.IWrite2d.ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
- uid: ImgDoc2Net.Interfaces.IWrite2d.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.IntPtr,System.Int64)
  commentId: M:ImgDoc2Net.Interfaces.IWrite2d.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.IntPtr,System.Int64)
  id: AddTile(ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.IntPtr,System.Int64)
  parent: ImgDoc2Net.Interfaces.IWrite2d
  langs:
  - csharp
  - vb
  name: AddTile(ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, IntPtr, long)
  nameWithType: IWrite2d.AddTile(ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, IntPtr, long)
  fullName: ImgDoc2Net.Interfaces.IWrite2d.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate, in ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, System.IntPtr, long)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/IWrite2d.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddTile
    path: ../imgdoc2Net/Interfaces/IWrite2d.cs
    startLine: 23
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: "\nAdds a tile with the specified content. \n"
  example: []
  syntax:
    content: long AddTile(ITileCoordinate tileCoordinate, in LogicalPosition logicalPosition, Tile2dBaseInfo tile2dBaseInfo, DataType dataType, IntPtr pointerTileData, long sizeTileData)
    parameters:
    - id: tileCoordinate
      type: ImgDoc2Net.Interfaces.ITileCoordinate
      description: 'The tile coordinate. '
    - id: logicalPosition
      type: ImgDoc2Net.Interfaces.LogicalPosition
      description: 'The logical position. '
    - id: tile2dBaseInfo
      type: ImgDoc2Net.Interfaces.Tile2dBaseInfo
      description: 'Information describing the tile&apos;s bitmap. '
    - id: dataType
      type: ImgDoc2Net.Interfaces.DataType
      description: 'The data type (or type if representation) of the pixel data. '
    - id: pointerTileData
      type: System.IntPtr
      description: 'Pointer to the pixel data. '
    - id: sizeTileData
      type: System.Int64
      description: 'The size of the data (pointed to by &quot;pointerTileData&quot;. '
    return:
      type: System.Int64
      description: 'The primary key of the newly added tile. '
    content.vb: Function AddTile(tileCoordinate As ITileCoordinate, logicalPosition As LogicalPosition, tile2dBaseInfo As Tile2dBaseInfo, dataType As DataType, pointerTileData As IntPtr, sizeTileData As Long) As Long
  overload: ImgDoc2Net.Interfaces.IWrite2d.AddTile*
  nameWithType.vb: IWrite2d.AddTile(ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, IntPtr, Long)
  fullName.vb: ImgDoc2Net.Interfaces.IWrite2d.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate, ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, System.IntPtr, Long)
  name.vb: AddTile(ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, IntPtr, Long)
references:
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: ImgDoc2Net.Interfaces.IWrite2d.ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  commentId: M:ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  parent: ImgDoc2Net.Interfaces.Write2dExtensions
  definition: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  name: AddTile(IWrite2d, ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, byte[])
  nameWithType: Write2dExtensions.AddTile(IWrite2d, ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, byte[])
  fullName: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d, ImgDoc2Net.Interfaces.ITileCoordinate, in ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, byte[])
  nameWithType.vb: Write2dExtensions.AddTile(IWrite2d, ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, Byte())
  fullName.vb: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d, ImgDoc2Net.Interfaces.ITileCoordinate, ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, Byte())
  name.vb: AddTile(IWrite2d, ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, Byte())
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
    name: AddTile
  - name: (
  - uid: ImgDoc2Net.Interfaces.IWrite2d
    name: IWrite2d
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.ITileCoordinate
    name: ITileCoordinate
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: ImgDoc2Net.Interfaces.LogicalPosition
    name: LogicalPosition
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.Tile2dBaseInfo
    name: Tile2dBaseInfo
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.DataType
    name: DataType
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
    name: AddTile
  - name: (
  - uid: ImgDoc2Net.Interfaces.IWrite2d
    name: IWrite2d
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.ITileCoordinate
    name: ITileCoordinate
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.LogicalPosition
    name: LogicalPosition
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.Tile2dBaseInfo
    name: Tile2dBaseInfo
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.DataType
    name: DataType
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  commentId: M:ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
  isExternal: true
  name: AddTile(IWrite2d, ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, byte[])
  nameWithType: Write2dExtensions.AddTile(IWrite2d, ITileCoordinate, in LogicalPosition, Tile2dBaseInfo, DataType, byte[])
  fullName: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d, ImgDoc2Net.Interfaces.ITileCoordinate, in ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, byte[])
  nameWithType.vb: Write2dExtensions.AddTile(IWrite2d, ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, Byte())
  fullName.vb: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d, ImgDoc2Net.Interfaces.ITileCoordinate, ImgDoc2Net.Interfaces.LogicalPosition, ImgDoc2Net.Interfaces.Tile2dBaseInfo, ImgDoc2Net.Interfaces.DataType, Byte())
  name.vb: AddTile(IWrite2d, ITileCoordinate, LogicalPosition, Tile2dBaseInfo, DataType, Byte())
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
    name: AddTile
  - name: (
  - uid: ImgDoc2Net.Interfaces.IWrite2d
    name: IWrite2d
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.ITileCoordinate
    name: ITileCoordinate
  - name: ','
  - name: " "
  - name: in
  - name: " "
  - uid: ImgDoc2Net.Interfaces.LogicalPosition
    name: LogicalPosition
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.Tile2dBaseInfo
    name: Tile2dBaseInfo
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.DataType
    name: DataType
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.Write2dExtensions.AddTile(ImgDoc2Net.Interfaces.IWrite2d,ImgDoc2Net.Interfaces.ITileCoordinate,ImgDoc2Net.Interfaces.LogicalPosition@,ImgDoc2Net.Interfaces.Tile2dBaseInfo,ImgDoc2Net.Interfaces.DataType,System.Byte[])
    name: AddTile
  - name: (
  - uid: ImgDoc2Net.Interfaces.IWrite2d
    name: IWrite2d
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.ITileCoordinate
    name: ITileCoordinate
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.LogicalPosition
    name: LogicalPosition
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.Tile2dBaseInfo
    name: Tile2dBaseInfo
  - name: ','
  - name: " "
  - uid: ImgDoc2Net.Interfaces.DataType
    name: DataType
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: ImgDoc2Net.Interfaces.Write2dExtensions
  commentId: T:ImgDoc2Net.Interfaces.Write2dExtensions
  parent: ImgDoc2Net.Interfaces
  name: Write2dExtensions
  nameWithType: Write2dExtensions
  fullName: ImgDoc2Net.Interfaces.Write2dExtensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces.IWrite2d.AddTile*
  commentId: Overload:ImgDoc2Net.Interfaces.IWrite2d.AddTile
  name: AddTile
  nameWithType: IWrite2d.AddTile
  fullName: ImgDoc2Net.Interfaces.IWrite2d.AddTile
- uid: ImgDoc2Net.Interfaces.ITileCoordinate
  commentId: T:ImgDoc2Net.Interfaces.ITileCoordinate
  parent: ImgDoc2Net.Interfaces
  name: ITileCoordinate
  nameWithType: ITileCoordinate
  fullName: ImgDoc2Net.Interfaces.ITileCoordinate
- uid: ImgDoc2Net.Interfaces.LogicalPosition
  commentId: T:ImgDoc2Net.Interfaces.LogicalPosition
  parent: ImgDoc2Net.Interfaces
  name: LogicalPosition
  nameWithType: LogicalPosition
  fullName: ImgDoc2Net.Interfaces.LogicalPosition
- uid: ImgDoc2Net.Interfaces.Tile2dBaseInfo
  commentId: T:ImgDoc2Net.Interfaces.Tile2dBaseInfo
  parent: ImgDoc2Net.Interfaces
  name: Tile2dBaseInfo
  nameWithType: Tile2dBaseInfo
  fullName: ImgDoc2Net.Interfaces.Tile2dBaseInfo
- uid: ImgDoc2Net.Interfaces.DataType
  commentId: T:ImgDoc2Net.Interfaces.DataType
  parent: ImgDoc2Net.Interfaces
  name: DataType
  nameWithType: DataType
  fullName: ImgDoc2Net.Interfaces.DataType
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
