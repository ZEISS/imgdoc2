### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Implementation.DimensionQueryClause
  commentId: T:ImgDoc2Net.Implementation.DimensionQueryClause
  id: DimensionQueryClause
  parent: ImgDoc2Net.Implementation
  children:
  - ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition(ImgDoc2Net.Interfaces.DimensionCondition)
  - ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions
  langs:
  - csharp
  - vb
  name: DimensionQueryClause
  nameWithType: DimensionQueryClause
  fullName: ImgDoc2Net.Implementation.DimensionQueryClause
  type: Class
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/DimensionQueryClause.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: DimensionQueryClause
    path: ../imgdoc2Net/Implementation/DimensionQueryClause.cs
    startLine: 10
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Implementation of the IDimensionQueryClause interface..
  example: []
  syntax:
    content: 'public class DimensionQueryClause : IDimensionQueryClause'
    content.vb: Public Class DimensionQueryClause Implements IDimensionQueryClause
  inheritance:
  - System.Object
  implements:
  - ImgDoc2Net.Interfaces.IDimensionQueryClause
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition(ImgDoc2Net.Interfaces.DimensionCondition)
  commentId: M:ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition(ImgDoc2Net.Interfaces.DimensionCondition)
  id: AddCondition(ImgDoc2Net.Interfaces.DimensionCondition)
  parent: ImgDoc2Net.Implementation.DimensionQueryClause
  langs:
  - csharp
  - vb
  name: AddCondition(DimensionCondition)
  nameWithType: DimensionQueryClause.AddCondition(DimensionCondition)
  fullName: ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition(ImgDoc2Net.Interfaces.DimensionCondition)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/DimensionQueryClause.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: AddCondition
    path: ../imgdoc2Net/Implementation/DimensionQueryClause.cs
    startLine: 17
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Adds a condition.
  example: []
  syntax:
    content: public void AddCondition(DimensionCondition dimensionCondition)
    parameters:
    - id: dimensionCondition
      type: ImgDoc2Net.Interfaces.DimensionCondition
      description: The dimension condition.
    content.vb: Public Sub AddCondition(dimensionCondition As DimensionCondition)
  overload: ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition*
- uid: ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions
  commentId: M:ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions
  id: EnumConditions
  parent: ImgDoc2Net.Implementation.DimensionQueryClause
  langs:
  - csharp
  - vb
  name: EnumConditions()
  nameWithType: DimensionQueryClause.EnumConditions()
  fullName: ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/DimensionQueryClause.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: EnumConditions
    path: ../imgdoc2Net/Implementation/DimensionQueryClause.cs
    startLine: 23
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Enumerates the dimension clauses.
  example: []
  syntax:
    content: public IEnumerable<DimensionCondition> EnumConditions()
    return:
      type: System.Collections.Generic.IEnumerable{ImgDoc2Net.Interfaces.DimensionCondition}
      description: An enumerator that allows foreach to be used to process the dimension clauses collection.
    content.vb: Public Function EnumConditions() As IEnumerable(Of DimensionCondition)
  overload: ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions*
  implements:
  - ImgDoc2Net.Interfaces.IDimensionQueryClause.EnumConditions
references:
- uid: ImgDoc2Net.Implementation
  commentId: N:ImgDoc2Net.Implementation
  name: ImgDoc2Net.Implementation
  nameWithType: ImgDoc2Net.Implementation
  fullName: ImgDoc2Net.Implementation
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ImgDoc2Net.Interfaces.IDimensionQueryClause
  commentId: T:ImgDoc2Net.Interfaces.IDimensionQueryClause
  parent: ImgDoc2Net.Interfaces
  name: IDimensionQueryClause
  nameWithType: IDimensionQueryClause
  fullName: ImgDoc2Net.Interfaces.IDimensionQueryClause
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition*
  commentId: Overload:ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition
  name: AddCondition
  nameWithType: DimensionQueryClause.AddCondition
  fullName: ImgDoc2Net.Implementation.DimensionQueryClause.AddCondition
- uid: ImgDoc2Net.Interfaces.DimensionCondition
  commentId: T:ImgDoc2Net.Interfaces.DimensionCondition
  parent: ImgDoc2Net.Interfaces
  name: DimensionCondition
  nameWithType: DimensionCondition
  fullName: ImgDoc2Net.Interfaces.DimensionCondition
- uid: ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions*
  commentId: Overload:ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions
  name: EnumConditions
  nameWithType: DimensionQueryClause.EnumConditions
  fullName: ImgDoc2Net.Implementation.DimensionQueryClause.EnumConditions
- uid: ImgDoc2Net.Interfaces.IDimensionQueryClause.EnumConditions
  commentId: M:ImgDoc2Net.Interfaces.IDimensionQueryClause.EnumConditions
  parent: ImgDoc2Net.Interfaces.IDimensionQueryClause
  name: EnumConditions()
  nameWithType: IDimensionQueryClause.EnumConditions()
  fullName: ImgDoc2Net.Interfaces.IDimensionQueryClause.EnumConditions()
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.IDimensionQueryClause.EnumConditions
    name: EnumConditions
  - name: (
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.IDimensionQueryClause.EnumConditions
    name: EnumConditions
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{ImgDoc2Net.Interfaces.DimensionCondition}
  commentId: T:System.Collections.Generic.IEnumerable{ImgDoc2Net.Interfaces.DimensionCondition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DimensionCondition>
  nameWithType: IEnumerable<DimensionCondition>
  fullName: System.Collections.Generic.IEnumerable<ImgDoc2Net.Interfaces.DimensionCondition>
  nameWithType.vb: IEnumerable(Of DimensionCondition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of ImgDoc2Net.Interfaces.DimensionCondition)
  name.vb: IEnumerable(Of DimensionCondition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - uid: ImgDoc2Net.Interfaces.DimensionCondition
    name: DimensionCondition
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: ImgDoc2Net.Interfaces.DimensionCondition
    name: DimensionCondition
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
