### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Implementation.OpenExistingOptions
  commentId: T:ImgDoc2Net.Implementation.OpenExistingOptions
  id: OpenExistingOptions
  parent: ImgDoc2Net.Implementation
  children:
  - ImgDoc2Net.Implementation.OpenExistingOptions.#ctor
  - ImgDoc2Net.Implementation.OpenExistingOptions.Dispose
  - ImgDoc2Net.Implementation.OpenExistingOptions.Dispose(System.Boolean)
  - ImgDoc2Net.Implementation.OpenExistingOptions.Filename
  - ImgDoc2Net.Implementation.OpenExistingOptions.Handle
  - ImgDoc2Net.Implementation.OpenExistingOptions.Readonly
  langs:
  - csharp
  - vb
  name: OpenExistingOptions
  nameWithType: OpenExistingOptions
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions
  type: Class
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: OpenExistingOptions
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 48
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Implementation of the IOpenExistingOptions interface.
  example: []
  syntax:
    content: 'public class OpenExistingOptions : IOpenExistingOptions, IDisposable'
    content.vb: Public Class OpenExistingOptions Implements IOpenExistingOptions, IDisposable
  inheritance:
  - System.Object
  implements:
  - ImgDoc2Net.Interfaces.IOpenExistingOptions
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.#ctor
  commentId: M:ImgDoc2Net.Implementation.OpenExistingOptions.#ctor
  id: '#ctor'
  parent: ImgDoc2Net.Implementation.OpenExistingOptions
  langs:
  - csharp
  - vb
  name: OpenExistingOptions()
  nameWithType: OpenExistingOptions.OpenExistingOptions()
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.OpenExistingOptions()
  type: Constructor
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: .ctor
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 17
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: "\nInitializes a new instance of the <xref href=\"ImgDoc2Net.Implementation.OpenExistingOptions\" data-throw-if-not-resolved=\"false\"></xref> class. "
  example: []
  syntax:
    content: public OpenExistingOptions()
    content.vb: Public Sub New()
  overload: ImgDoc2Net.Implementation.OpenExistingOptions.#ctor*
  nameWithType.vb: OpenExistingOptions.New()
  fullName.vb: ImgDoc2Net.Implementation.OpenExistingOptions.New()
  name.vb: New()
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Handle
  commentId: P:ImgDoc2Net.Implementation.OpenExistingOptions.Handle
  id: Handle
  parent: ImgDoc2Net.Implementation.OpenExistingOptions
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: OpenExistingOptions.Handle
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Handle
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Handle
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 25
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets the interop handle.
  remarks: 'This is intended for internal use. '
  example: []
  syntax:
    content: public IntPtr Handle { get; }
    parameters: []
    return:
      type: System.IntPtr
      description: The handle.
    content.vb: Public ReadOnly Property Handle As IntPtr
  overload: ImgDoc2Net.Implementation.OpenExistingOptions.Handle*
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Filename
  commentId: P:ImgDoc2Net.Implementation.OpenExistingOptions.Filename
  id: Filename
  parent: ImgDoc2Net.Implementation.OpenExistingOptions
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: OpenExistingOptions.Filename
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Filename
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Filename
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 33
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets or sets the filename of the file.
  example: []
  syntax:
    content: public string Filename { get; set; }
    parameters: []
    return:
      type: System.String
      description: The filename.
    content.vb: Public Property Filename As String
  overload: ImgDoc2Net.Implementation.OpenExistingOptions.Filename*
  implements:
  - ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Readonly
  commentId: P:ImgDoc2Net.Implementation.OpenExistingOptions.Readonly
  id: Readonly
  parent: ImgDoc2Net.Implementation.OpenExistingOptions
  langs:
  - csharp
  - vb
  name: Readonly
  nameWithType: OpenExistingOptions.Readonly
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Readonly
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Readonly
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 42
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets a value indicating whether the file is to opened as &quot;readonly&quot;.
  example: []
  syntax:
    content: public bool Readonly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: True file is to opened as &quot;readonly&quot;; false otherwise.
    content.vb: Public ReadOnly Property [Readonly] As Boolean
  overload: ImgDoc2Net.Implementation.OpenExistingOptions.Readonly*
  implements:
  - ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose
  commentId: M:ImgDoc2Net.Implementation.OpenExistingOptions.Dispose
  id: Dispose
  parent: ImgDoc2Net.Implementation.OpenExistingOptions
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: OpenExistingOptions.Dispose()
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dispose
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 52
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: >-
    Performs application-defined tasks associated with freeing, releasing, or resetting
       unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose(System.Boolean)
  commentId: M:ImgDoc2Net.Implementation.OpenExistingOptions.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: ImgDoc2Net.Implementation.OpenExistingOptions
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: OpenExistingOptions.Dispose(bool)
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose(bool)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/OpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dispose
    path: ../imgdoc2Net/Implementation/OpenExistingOptions.cs
    startLine: 63
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: >-
    Performs application-defined tasks associated with freeing, releasing, or resetting
       unmanaged resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        True to release both managed and unmanaged resources; false to
           release only unmanaged resources.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose*
  nameWithType.vb: OpenExistingOptions.Dispose(Boolean)
  fullName.vb: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: ImgDoc2Net.Implementation
  commentId: N:ImgDoc2Net.Implementation
  name: ImgDoc2Net.Implementation
  nameWithType: ImgDoc2Net.Implementation
  fullName: ImgDoc2Net.Implementation
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions
  commentId: T:ImgDoc2Net.Interfaces.IOpenExistingOptions
  parent: ImgDoc2Net.Interfaces
  name: IOpenExistingOptions
  nameWithType: IOpenExistingOptions
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: ImgDoc2Net.Implementation.OpenExistingOptions
  commentId: T:ImgDoc2Net.Implementation.OpenExistingOptions
  parent: ImgDoc2Net.Implementation
  name: OpenExistingOptions
  nameWithType: OpenExistingOptions
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.#ctor*
  commentId: Overload:ImgDoc2Net.Implementation.OpenExistingOptions.#ctor
  name: OpenExistingOptions
  nameWithType: OpenExistingOptions.OpenExistingOptions
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.OpenExistingOptions
  nameWithType.vb: OpenExistingOptions.New
  fullName.vb: ImgDoc2Net.Implementation.OpenExistingOptions.New
  name.vb: New
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Handle*
  commentId: Overload:ImgDoc2Net.Implementation.OpenExistingOptions.Handle
  name: Handle
  nameWithType: OpenExistingOptions.Handle
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Handle
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Filename*
  commentId: Overload:ImgDoc2Net.Implementation.OpenExistingOptions.Filename
  name: Filename
  nameWithType: OpenExistingOptions.Filename
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Filename
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  commentId: P:ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  parent: ImgDoc2Net.Interfaces.IOpenExistingOptions
  name: Filename
  nameWithType: IOpenExistingOptions.Filename
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Readonly*
  commentId: Overload:ImgDoc2Net.Implementation.OpenExistingOptions.Readonly
  name: Readonly
  nameWithType: OpenExistingOptions.Readonly
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Readonly
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  commentId: P:ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  parent: ImgDoc2Net.Interfaces.IOpenExistingOptions
  name: Readonly
  nameWithType: IOpenExistingOptions.Readonly
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose*
  commentId: Overload:ImgDoc2Net.Implementation.OpenExistingOptions.Dispose
  name: Dispose
  nameWithType: OpenExistingOptions.Dispose
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
