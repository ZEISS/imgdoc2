### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Implementation.Document
  commentId: T:ImgDoc2Net.Implementation.Document
  id: Document
  parent: ImgDoc2Net.Implementation
  children:
  - ImgDoc2Net.Implementation.Document.CreateNew(ImgDoc2Net.Implementation.CreateOptions)
  - ImgDoc2Net.Implementation.Document.Dispose
  - ImgDoc2Net.Implementation.Document.Dispose(System.Boolean)
  - ImgDoc2Net.Implementation.Document.Finalize
  - ImgDoc2Net.Implementation.Document.Get2dReader
  - ImgDoc2Net.Implementation.Document.Get2dWriter
  - ImgDoc2Net.Implementation.Document.OpenExisting(ImgDoc2Net.Implementation.OpenExistingOptions)
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: Document
  fullName: ImgDoc2Net.Implementation.Document
  type: Class
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Document
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 98
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: "\nThe imgdoc2 document object.\n"
  example: []
  syntax:
    content: 'public class Document : IDocument, IDisposable'
    content.vb: Public Class Document Implements IDocument, IDisposable
  inheritance:
  - System.Object
  implements:
  - ImgDoc2Net.Interfaces.IDocument
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: ImgDoc2Net.Implementation.Document.Get2dReader
  commentId: M:ImgDoc2Net.Implementation.Document.Get2dReader
  id: Get2dReader
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: Get2dReader()
  nameWithType: Document.Get2dReader()
  fullName: ImgDoc2Net.Implementation.Document.Get2dReader()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Get2dReader
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 46
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets reader-object in case of a 2d-image document.
  example: []
  syntax:
    content: public IRead2d Get2dReader()
    return:
      type: ImgDoc2Net.Interfaces.IRead2d
      description: The reader-object for a 2d-image-document.
    content.vb: Public Function Get2dReader() As IRead2d
  overload: ImgDoc2Net.Implementation.Document.Get2dReader*
  implements:
  - ImgDoc2Net.Interfaces.IDocument.Get2dReader
- uid: ImgDoc2Net.Implementation.Document.Get2dWriter
  commentId: M:ImgDoc2Net.Implementation.Document.Get2dWriter
  id: Get2dWriter
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: Get2dWriter()
  nameWithType: Document.Get2dWriter()
  fullName: ImgDoc2Net.Implementation.Document.Get2dWriter()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Get2dWriter
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 60
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Gets writer-object in case of a 2d-image document.
  example: []
  syntax:
    content: public IWrite2d Get2dWriter()
    return:
      type: ImgDoc2Net.Interfaces.IWrite2d
      description: The writer-object for a 2d-image-document.
    content.vb: Public Function Get2dWriter() As IWrite2d
  overload: ImgDoc2Net.Implementation.Document.Get2dWriter*
  implements:
  - ImgDoc2Net.Interfaces.IDocument.Get2dWriter
- uid: ImgDoc2Net.Implementation.Document.CreateNew(ImgDoc2Net.Implementation.CreateOptions)
  commentId: M:ImgDoc2Net.Implementation.Document.CreateNew(ImgDoc2Net.Implementation.CreateOptions)
  id: CreateNew(ImgDoc2Net.Implementation.CreateOptions)
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: CreateNew(CreateOptions)
  nameWithType: Document.CreateNew(CreateOptions)
  fullName: ImgDoc2Net.Implementation.Document.CreateNew(ImgDoc2Net.Implementation.CreateOptions)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: CreateNew
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 81
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Creates a new document.
  example: []
  syntax:
    content: public static Document CreateNew(CreateOptions createOptions)
    parameters:
    - id: createOptions
      type: ImgDoc2Net.Implementation.CreateOptions
      description: Options for controlling the creation of the new document.
    return:
      type: ImgDoc2Net.Implementation.Document
      description: The newly created document.
    content.vb: Public Shared Function CreateNew(createOptions As CreateOptions) As Document
  overload: ImgDoc2Net.Implementation.Document.CreateNew*
- uid: ImgDoc2Net.Implementation.Document.OpenExisting(ImgDoc2Net.Implementation.OpenExistingOptions)
  commentId: M:ImgDoc2Net.Implementation.Document.OpenExisting(ImgDoc2Net.Implementation.OpenExistingOptions)
  id: OpenExisting(ImgDoc2Net.Implementation.OpenExistingOptions)
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: OpenExisting(OpenExistingOptions)
  nameWithType: Document.OpenExisting(OpenExistingOptions)
  fullName: ImgDoc2Net.Implementation.Document.OpenExisting(ImgDoc2Net.Implementation.OpenExistingOptions)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: OpenExisting
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 91
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: Opens an existing document.
  example: []
  syntax:
    content: public static Document OpenExisting(OpenExistingOptions openExistingOptions)
    parameters:
    - id: openExistingOptions
      type: ImgDoc2Net.Implementation.OpenExistingOptions
      description: Options for controlling the open-existing operation.
    return:
      type: ImgDoc2Net.Implementation.Document
      description: The newly created document.
    content.vb: Public Shared Function OpenExisting(openExistingOptions As OpenExistingOptions) As Document
  overload: ImgDoc2Net.Implementation.Document.OpenExisting*
- uid: ImgDoc2Net.Implementation.Document.Finalize
  commentId: M:ImgDoc2Net.Implementation.Document.Finalize
  id: Finalize
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: ~Document()
  nameWithType: Document.~Document()
  fullName: ImgDoc2Net.Implementation.Document.~Document()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Finalize
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 105
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: "\nFinalizes an instance of the <xref href=\"ImgDoc2Net.Implementation.Document\" data-throw-if-not-resolved=\"false\"></xref> class..\n"
  example: []
  syntax:
    content: protected ~Document()
    content.vb: ''
  overload: ImgDoc2Net.Implementation.Document.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: ImgDoc2Net.Implementation.Document.Dispose
  commentId: M:ImgDoc2Net.Implementation.Document.Dispose
  id: Dispose
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Document.Dispose()
  fullName: ImgDoc2Net.Implementation.Document.Dispose()
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dispose
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 115
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: "\nPerforms application-defined tasks associated with freeing, releasing, or resetting unmanaged\nresources.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: ImgDoc2Net.Implementation.Document.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: ImgDoc2Net.Implementation.Document.Dispose(System.Boolean)
  commentId: M:ImgDoc2Net.Implementation.Document.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: ImgDoc2Net.Implementation.Document
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: Document.Dispose(bool)
  fullName: ImgDoc2Net.Implementation.Document.Dispose(bool)
  type: Method
  source:
    remote:
      path: dotnet/imgdoc2Net/Implementation/Document.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Dispose
    path: ../imgdoc2Net/Implementation/Document.cs
    startLine: 127
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Implementation
  summary: >-
    Performs application-defined tasks associated with freeing, releasing, or resetting
       unmanaged resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        True to release both managed and unmanaged resources; false to
           release only unmanaged resources.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: ImgDoc2Net.Implementation.Document.Dispose*
  nameWithType.vb: Document.Dispose(Boolean)
  fullName.vb: ImgDoc2Net.Implementation.Document.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: ImgDoc2Net.Implementation
  commentId: N:ImgDoc2Net.Implementation
  name: ImgDoc2Net.Implementation
  nameWithType: ImgDoc2Net.Implementation
  fullName: ImgDoc2Net.Implementation
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Implementation
    name: Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ImgDoc2Net.Interfaces.IDocument
  commentId: T:ImgDoc2Net.Interfaces.IDocument
  parent: ImgDoc2Net.Interfaces
  name: IDocument
  nameWithType: IDocument
  fullName: ImgDoc2Net.Interfaces.IDocument
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: ImgDoc2Net.Implementation.Document.Get2dReader*
  commentId: Overload:ImgDoc2Net.Implementation.Document.Get2dReader
  name: Get2dReader
  nameWithType: Document.Get2dReader
  fullName: ImgDoc2Net.Implementation.Document.Get2dReader
- uid: ImgDoc2Net.Interfaces.IDocument.Get2dReader
  commentId: M:ImgDoc2Net.Interfaces.IDocument.Get2dReader
  parent: ImgDoc2Net.Interfaces.IDocument
  name: Get2dReader()
  nameWithType: IDocument.Get2dReader()
  fullName: ImgDoc2Net.Interfaces.IDocument.Get2dReader()
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.IDocument.Get2dReader
    name: Get2dReader
  - name: (
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.IDocument.Get2dReader
    name: Get2dReader
  - name: (
  - name: )
- uid: ImgDoc2Net.Interfaces.IRead2d
  commentId: T:ImgDoc2Net.Interfaces.IRead2d
  parent: ImgDoc2Net.Interfaces
  name: IRead2d
  nameWithType: IRead2d
  fullName: ImgDoc2Net.Interfaces.IRead2d
- uid: ImgDoc2Net.Implementation.Document.Get2dWriter*
  commentId: Overload:ImgDoc2Net.Implementation.Document.Get2dWriter
  name: Get2dWriter
  nameWithType: Document.Get2dWriter
  fullName: ImgDoc2Net.Implementation.Document.Get2dWriter
- uid: ImgDoc2Net.Interfaces.IDocument.Get2dWriter
  commentId: M:ImgDoc2Net.Interfaces.IDocument.Get2dWriter
  parent: ImgDoc2Net.Interfaces.IDocument
  name: Get2dWriter()
  nameWithType: IDocument.Get2dWriter()
  fullName: ImgDoc2Net.Interfaces.IDocument.Get2dWriter()
  spec.csharp:
  - uid: ImgDoc2Net.Interfaces.IDocument.Get2dWriter
    name: Get2dWriter
  - name: (
  - name: )
  spec.vb:
  - uid: ImgDoc2Net.Interfaces.IDocument.Get2dWriter
    name: Get2dWriter
  - name: (
  - name: )
- uid: ImgDoc2Net.Interfaces.IWrite2d
  commentId: T:ImgDoc2Net.Interfaces.IWrite2d
  parent: ImgDoc2Net.Interfaces
  name: IWrite2d
  nameWithType: IWrite2d
  fullName: ImgDoc2Net.Interfaces.IWrite2d
- uid: ImgDoc2Net.Implementation.Document.CreateNew*
  commentId: Overload:ImgDoc2Net.Implementation.Document.CreateNew
  name: CreateNew
  nameWithType: Document.CreateNew
  fullName: ImgDoc2Net.Implementation.Document.CreateNew
- uid: ImgDoc2Net.Implementation.CreateOptions
  commentId: T:ImgDoc2Net.Implementation.CreateOptions
  parent: ImgDoc2Net.Implementation
  name: CreateOptions
  nameWithType: CreateOptions
  fullName: ImgDoc2Net.Implementation.CreateOptions
- uid: ImgDoc2Net.Implementation.Document
  commentId: T:ImgDoc2Net.Implementation.Document
  parent: ImgDoc2Net.Implementation
  name: Document
  nameWithType: Document
  fullName: ImgDoc2Net.Implementation.Document
- uid: ImgDoc2Net.Implementation.Document.OpenExisting*
  commentId: Overload:ImgDoc2Net.Implementation.Document.OpenExisting
  name: OpenExisting
  nameWithType: Document.OpenExisting
  fullName: ImgDoc2Net.Implementation.Document.OpenExisting
- uid: ImgDoc2Net.Implementation.OpenExistingOptions
  commentId: T:ImgDoc2Net.Implementation.OpenExistingOptions
  parent: ImgDoc2Net.Implementation
  name: OpenExistingOptions
  nameWithType: OpenExistingOptions
  fullName: ImgDoc2Net.Implementation.OpenExistingOptions
- uid: ImgDoc2Net.Implementation.Document.Finalize*
  commentId: Overload:ImgDoc2Net.Implementation.Document.Finalize
  name: ~Document
  nameWithType: Document.~Document
  fullName: ImgDoc2Net.Implementation.Document.~Document
  spec.csharp:
  - name: "~"
  - uid: ImgDoc2Net.Implementation.Document.Finalize*
    name: Document
- uid: ImgDoc2Net.Implementation.Document.Dispose*
  commentId: Overload:ImgDoc2Net.Implementation.Document.Dispose
  name: Dispose
  nameWithType: Document.Dispose
  fullName: ImgDoc2Net.Implementation.Document.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
