### YamlMime:ManagedReference
items:
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions
  commentId: T:ImgDoc2Net.Interfaces.IOpenExistingOptions
  id: IOpenExistingOptions
  parent: ImgDoc2Net.Interfaces
  children:
  - ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  - ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  langs:
  - csharp
  - vb
  name: IOpenExistingOptions
  nameWithType: IOpenExistingOptions
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions
  type: Interface
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/IOpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: IOpenExistingOptions
    path: ../imgdoc2Net/Interfaces/IOpenExistingOptions.cs
    startLine: 9
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: This interface gathers all parameters for the operation of &quot;opening an existing file&quot;.
  example: []
  syntax:
    content: 'public interface IOpenExistingOptions : IDisposable'
    content.vb: Public Interface IOpenExistingOptions Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  commentId: P:ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  id: Filename
  parent: ImgDoc2Net.Interfaces.IOpenExistingOptions
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: IOpenExistingOptions.Filename
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/IOpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Filename
    path: ../imgdoc2Net/Interfaces/IOpenExistingOptions.cs
    startLine: 14
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: Gets the filename of the file.
  example: []
  syntax:
    content: string Filename { get; }
    parameters: []
    return:
      type: System.String
      description: The filename.
    content.vb: ReadOnly Property Filename As String
  overload: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename*
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  commentId: P:ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  id: Readonly
  parent: ImgDoc2Net.Interfaces.IOpenExistingOptions
  langs:
  - csharp
  - vb
  name: Readonly
  nameWithType: IOpenExistingOptions.Readonly
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  type: Property
  source:
    remote:
      path: dotnet/imgdoc2Net/Interfaces/IOpenExistingOptions.cs
      branch: main
      repo: git@github.com:ptahmose/imgdoc2.git
    id: Readonly
    path: ../imgdoc2Net/Interfaces/IOpenExistingOptions.cs
    startLine: 19
  assemblies:
  - ImgDoc2Net
  namespace: ImgDoc2Net.Interfaces
  summary: Gets a value indicating whether the file is to opened as &quot;readonly&quot;.
  example: []
  syntax:
    content: bool Readonly { get; }
    parameters: []
    return:
      type: System.Boolean
      description: True file is to opened as &quot;readonly&quot;; false otherwise.
    content.vb: ReadOnly Property [Readonly] As Boolean
  overload: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly*
references:
- uid: ImgDoc2Net.Interfaces
  commentId: N:ImgDoc2Net.Interfaces
  name: ImgDoc2Net.Interfaces
  nameWithType: ImgDoc2Net.Interfaces
  fullName: ImgDoc2Net.Interfaces
  spec.csharp:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
  spec.vb:
  - uid: ImgDoc2Net
    name: ImgDoc2Net
  - name: .
  - uid: ImgDoc2Net.Interfaces
    name: Interfaces
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename*
  commentId: Overload:ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
  name: Filename
  nameWithType: IOpenExistingOptions.Filename
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions.Filename
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly*
  commentId: Overload:ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
  name: Readonly
  nameWithType: IOpenExistingOptions.Readonly
  fullName: ImgDoc2Net.Interfaces.IOpenExistingOptions.Readonly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
